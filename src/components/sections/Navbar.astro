---
//Import relevant dependencies
import ThemeIcon from "@components/ThemeIcon.astro";
import NavLink from "@components/ui/links/NavLink.astro";
import enStrings from "@utils/navigation.ts";
import frStrings from "@utils/fr/navigation.ts";

// Select the correct translation based on the page's lang prop:
const strings = Astro.currentLocale === "fr" ? frStrings : enStrings;
const homeUrl = Astro.currentLocale === "fr" ? "/fr" : "/";
---

<!-- Main header component -->


<header
  class="sticky top-0 inset-x-0 z-50 flex-col w-full flex-wrap text-sm md:flex-nowrap md:justify-start"
>
  <!-- Navigation container -->
  <nav
    class="top-4 relative  w-full rounded-[36px] border border-yellow-100/40 bg-yellow-50/60 px-4 py-3 backdrop-blur-md dark:border-neutral-700/40 dark:bg-neutral-800/80 dark:backdrop-blur-md md:flex md:items-center md:justify-between md:px-6 md:py-0 lg:px-8 xl:mx-auto"
    aria-label="Global"
  >
    <div class="flex items-center justify-between">
      <!-- Brand logo -->
      <a
        class="flex-none rounded-lg text-xl font-bold outline-none ring-zinc-500 focus-visible:ring dark:ring-zinc-200 dark:focus:outline-none"
        href={homeUrl}
        aria-label="Brand"
      >
      <svg             class=" w-[9rem] flex-shrink-0 hs-collapse-open:hidden"
      version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
      viewBox="0 0 1358 180.8" style="enable-background:new 0 0 1358 180.8;" xml:space="preserve">
   <style type="text/css">
     .st0{fill:#F4CB1B;}
     .st1{fill:#007EC3;}
   </style>
   <g>
     <path class="st0" d="M0,0h97.9v39.5H43.1v27.4h53.1v39.6H43.1v30.3h54.8v39.5H0V0z"/>
     <path class="st0" d="M120.6,0h39.5v176.3h-39.5V0z"/>
     <path class="st0" d="M312.6,134.9c-6.4,14.8-15.7,26.2-26.9,33.8c-11,7.9-24.1,11.9-37.6,11.9c-37.9,0-70-30.7-70-70
       c0-36.9,29.1-71,69.3-71s69.8,31.9,69.8,72.2c0,5.2-0.5,7.4-1,10.5H217c2.4,15.7,15.5,25,31,25c12.2,0,18.6-5.5,24.1-12.4H312.6z
        M277.6,95.5c-1.7-7.9-9.5-22.6-30-22.6c-20.5,0-28.4,14.8-30,22.6H277.6z"/>
     <path class="st0" d="M335.7,0h39.5v92h0.5l36.7-47.9h46.9l-49.8,58.1l48.4,74.1h-44.8l-37.4-63.6h-0.5v63.6h-39.5V0z"/>
     <path class="st0" d="M522.5,44.1h19.1v30h-19.1v102.2h-39.5V74.1h-19.5v-30h19.5V0h39.5V44.1z"/>
     <path class="st0" d="M558.5,44.1h37.2v14.1h0.5c3.3-6.4,10.2-18.6,33.1-18.6v39.8c-18.3,0.5-31.2,4.3-31.2,24.3v72.7h-39.6V44.1z"
       />
     <path class="st0" d="M776.7,110.1c0,32.4-23.1,70.3-71.2,70.3c-6.1,0-11.8-0.6-17.1-1.7c4-4.6,8-9.1,12-13.7
       c8.6-9.9,17.3-19.7,25.9-29.6c1.8-1.7,3.5-3.5,4.9-5.6c2.8-3.2,5.7-6.5,8.5-9.7c3.6-4.1,7.2-8.2,10.8-12.4c1.4-1.6,1.5-3.3,0.4-4.8
       c-0.7-1-1.7-1.4-2.9-1.6c-4.2-0.6-8.3-1.3-12.5-1.9c-4.7-0.7-9.4-1.4-14.2-2.1c-0.5-0.1-1.1-0.2-1.7-0.3c0.2-0.4,0.2-0.7,0.3-1
       l4.7-12.5c0.8-2.3,1.7-4.5,2.5-6.8c3.7-9.9,7.4-19.8,11.1-29.7C764.2,59.4,776.7,86.2,776.7,110.1z"/>
     <path class="st0" d="M691.7,123c1,0.2,2,0.3,3.2,0.5c-0.1,0.4-0.2,0.8-0.3,1.1c-1.8,4.8-3.5,9.5-5.3,14.2c-2.6,7-5.2,14-7.9,21
       c-1.8,4.9-3.7,9.9-5.5,14.9c-28-11.7-41.6-39.8-41.6-64.6c0-32.4,23.1-70.3,71.2-70.3c7.2,0,13.8,0.8,19.8,2.4
       c-12.2,13.2-24.4,26.4-36.6,39.5c-3.5,3.8-7.1,7.6-10.6,11.5c-2.1,2.2-4.1,4.4-6.2,6.7c-3.8,4.1-7.6,8.2-11.4,12.3
       c-1.4,1.5-1.6,3.3-0.6,4.8c0.8,1.2,1.9,1.6,3.2,1.8c4.1,0.6,8.1,1.2,12.2,1.8C680.8,121.3,686.2,122.2,691.7,123z"/>
     <path class="st1" d="M855.3,81.2c-0.2-2.9-0.7-10-12.4-10c-8.3,0-11.2,5.2-11.2,8.8c0,7.1,9.8,11.2,20.3,14.3
       c22.4,6.2,46.2,12.9,46.2,41.5c0,27.9-24.5,45-53.8,45c-20,0-50.3-9.1-53.8-43.8h39.3c1.7,12.2,13.3,12.2,15,12.2
       c6.7,0,13.8-3.8,13.8-10.2c0-10.2-9.8-11.4-35-21.2c-17.2-5.5-31.5-16.7-31.5-34.5c0-26.2,23.8-43.6,51.2-43.6
       c17.4,0,47.4,6.9,50.7,41.7H855.3z"/>
     <path class="st1" d="M917.7,44.1h37.2v14.1h0.5c3.3-6.4,10.2-18.6,33.1-18.6v39.8c-18.3,0.5-31.2,4.3-31.2,24.3v72.7h-39.5V44.1z"
       />
     <path class="st1" d="M1131,134.9c-6.4,14.8-15.7,26.2-26.9,33.8c-11,7.9-24.1,11.9-37.6,11.9c-37.9,0-70-30.7-70-70
       c0-36.9,29.1-71,69.3-71c40.3,0,69.8,31.9,69.8,72.2c0,5.2-0.5,7.4-1,10.5h-99.1c2.4,15.7,15.5,25,31,25c12.2,0,18.6-5.5,24.1-12.4
       H1131z M1096,95.5c-1.7-7.9-9.5-22.6-30-22.6c-20.5,0-28.4,14.8-30,22.6H1096z"/>
     <path class="st1" d="M1358,104.1v72.2h-39.6V106c0-10.7,0-29.3-20.3-29.3c-21.9,0-21.9,20-21.9,27.4v72.2h-39.6v-72
       c0-7.1,0-27.6-19.8-27.6c-22.4,0-22.4,21.4-22.4,29.3v70.3h-39.6V44.1h36.9v14.1h0.5c3.1-5.5,11.7-18.6,36.5-18.6
       c11.7,0,27.6,4.1,38.1,23.6c8.1-12.9,21.7-23.6,41.9-23.6c9.3,0,24.1,2.1,34.8,13.3c9.1,9.6,12.5,16.9,13.7,31.6
       C1357.9,89.9,1358,96.3,1358,104.1z"/>
   </g>
   </svg>      </a>
      
      <!-- Collapse toggle for smaller screens -->
      <div class="ml-auto mr-5 md:hidden">
        <button
          type="button"
          class="hs-collapse-toggle flex h-8 w-8 items-center justify-center rounded-full text-sm font-bold text-neutral-600 transition duration-300 hover:bg-neutral-200 disabled:pointer-events-none disabled:opacity-50 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:focus:outline-none"
          data-hs-collapse="#navbar-collapse-with-animation"
          aria-controls="navbar-collapse-with-animation"
          aria-label="Toggle navigation"
        >
          <svg
            class="h-[1.25rem] w-[1.25rem] flex-shrink-0 hs-collapse-open:hidden"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <line x1="3" x2="21" y1="6" y2="6"></line>
            <line x1="3" x2="21" y1="12" y2="12"></line>
            <line x1="3" x2="21" y1="18" y2="18"></line>
          </svg>
          <svg
            class="hidden h-[1.25rem] w-[1.25rem] flex-shrink-0 hs-collapse-open:block"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M18 6 6 18"></path>
            <path d="m6 6 12 12"></path>
          </svg>
        </button>
      </div>
      <!-- ThemeIcon component specifically for smaller screens -->
      <span class="inline-block md:hidden">
        <ThemeIcon />
      </span>
    </div>
    <!-- Contains navigation links -->
    <div
      id="navbar-collapse-with-animation"
      class="hs-collapse hidden grow basis-full overflow-hidden transition-all duration-300 md:block"
    >
      <!-- Navigation links container -->
      <div
        class="mt-5 flex flex-col gap-x-0 gap-y-4 md:mt-0 md:flex-row md:items-center md:justify-end md:gap-x-4 lg:gap-x-7 md:gap-y-0 md:ps-7"
      >
        <!-- Navigation links and Authentication component -->
        {strings.navBarLinks.map(link => (
          <NavLink url={link.url} name={link.name} />
        ))}

        <!-- ThemeIcon component specifically for larger screens -->
        <span class="hidden md:inline-block">
          <ThemeIcon />
        </span>
      </div>
    </div>
  </nav>
</header>
<!-- Theme Appearance script to manage light/dark modes -->
<script is:inline>
  const HSThemeAppearance = {
    init() {
      const defaultTheme = "default";
      let theme = localStorage.getItem("hs_theme") || defaultTheme;

      if (document.querySelector("html").classList.contains("dark")) return;
      this.setAppearance(theme);
    },
    _resetStylesOnLoad() {
      const $resetStyles = document.createElement("style");
      $resetStyles.innerText = `*{transition: unset !important;}`;
      $resetStyles.setAttribute("data-hs-appearance-onload-styles", "");
      document.head.appendChild($resetStyles);
      return $resetStyles;
    },
    setAppearance(theme, saveInStore = true, dispatchEvent = true) {
      const $resetStylesEl = this._resetStylesOnLoad();

      if (saveInStore) {
        localStorage.setItem("hs_theme", theme);
      }

      if (theme === "auto") {
        theme = window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "default";
      }

      document.querySelector("html").classList.remove("dark");
      document.querySelector("html").classList.remove("default");
      document.querySelector("html").classList.remove("auto");

      document
        .querySelector("html")
        .classList.add(this.getOriginalAppearance());

      setTimeout(() => {
        $resetStylesEl.remove();
      });

      if (dispatchEvent) {
        window.dispatchEvent(
          new CustomEvent("on-hs-appearance-change", { detail: theme }),
        );
      }
    },
    getAppearance() {
      let theme = this.getOriginalAppearance();
      if (theme === "auto") {
        theme = window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "default";
      }
      return theme;
    },
    getOriginalAppearance() {
      const defaultTheme = "default";
      return localStorage.getItem("hs_theme") || defaultTheme;
    },
  };
  HSThemeAppearance.init();

  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", () => {
      if (HSThemeAppearance.getOriginalAppearance() === "auto") {
        HSThemeAppearance.setAppearance("auto", false);
      }
    });

  window.addEventListener("load", () => {
    const $clickableThemes = document.querySelectorAll(
      "[data-hs-theme-click-value]",
    );
    const $switchableThemes = document.querySelectorAll(
      "[data-hs-theme-switch]",
    );

    $clickableThemes.forEach(($item) => {
      $item.addEventListener("click", () =>
        HSThemeAppearance.setAppearance(
          $item.getAttribute("data-hs-theme-click-value"),
          true,
          $item,
        ),
      );
    });

    $switchableThemes.forEach(($item) => {
      $item.addEventListener("change", (e) => {
        HSThemeAppearance.setAppearance(e.target.checked ? "dark" : "default");
      });

      $item.checked = HSThemeAppearance.getAppearance() === "dark";
    });

    window.addEventListener("on-hs-appearance-change", (e) => {
      $switchableThemes.forEach(($item) => {
        $item.checked = e.detail === "dark";
      });
    });
  });
</script>
<!--Import the necessary Collapse and Overlay plugins-->
<!--https://preline.co/plugins/html/collapse.html-->
<!--https://preline.co/plugins/html/overlay.html-->
<script is:inline src="/scripts/vendor/preline/collapse/index.js"></script>
<script is:inline src="/scripts/vendor/preline/overlay/index.js"></script>
